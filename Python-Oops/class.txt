=======================================================================================================
1. What is class?
2. why we need class?
3. Where we can use class?
4. How to define class?
5. How to create object of class?
6. How to access members of class?
7. Types of class?
8. What is object?
9. Why we need object?
10. How to create object?
11. How to access members of object?
12. What is reference variable?
13. Why we need reference variable?
14. How to create reference variable?
15. Difference between object and reference variable?

=======================================================================================================

1. What is class?
=> Class is a blueprint or template for creating objects.
=> Class is a collection of objects.
=> Class is reference type(Reference type means, it will not store the value, it will store the address of the value)
= > Class is a user defined data type.
=> Class is a logical entity(Not a physical entity).
=> Class is a collection of members(Variables, Methods, Properties, Indexers, Events, Delegates, Constructors, Finalizers, Nested Types)


2. Why we need class?
=> To represent the state and behavior of real world entities in the form of objects.
=> To create objects.
=> To create reusable code.
=> To create modular code.
=> To create maintainable code.
=> To create scalable code.
=> To create testable code and many more.


3. Where we can use class?

=> We can use class in the following places.
1. Windows Application
2. Web Application
3. Web Services
4. WCF( Windows Communication Foundation)
5. WPF(Windows Presentation Foundation)
6. Silverlight
7. Console Application
8. Mobile Application
9. Cloud Application
10. Distributed Application
11. Game Development
12. Embedded Systems
13. Robotics
14. Artificial Intelligence
15. Machine Learning


4. How to define class?

class ClassName
{
    // Members
}

5. How to create object of class?

objectName = ClassName();



6. How to access members of class?

obj.MemberName;
# herre obj is object of class and MemberName is member of class.

7. Types of class?

1 - instance class/regular class/normal class
2 - abstract class/parent class
3 - partial class/sub class/child class
4 - static class/constant class
5 - field class/property class
6 - data class/value class/record class
7 - single term class/singleton class/one instance class
8 - meta class/parent class/
9 - sealed class/final class
10 - generic class
-------------------------
=>  Mostly we used:
1 - instance class
2 - abstract class
3 - single term class
4 - data class
5 - Meta class

8. What is object?

=> Object is an instance of class.
=> Object is a real world entity.
=> Object is a physical entity.
=> Object is a reference type.
=> Object is a reference variable.
=> Object is a user defined data type.
=> Object is a collection of members(Variables, Methods, Properties, Indexers, Events, Delegates, Constructors, Finalizers, Nested Types)

9. Why we need object?

=> To represent the state and behavior of real world entities.
=> To create instance of class.

10. How to create object?

objectName = ClassName();

11. How to access members of object?

obj.MemberName;  # here obj is object of class and MemberName is member of class.

12. What is reference variable?

=> Reference variable is a variable which will store the address of the object.

13. Why we need reference variable?

=> To access the members of object.

14. How to create reference variable?

ClassName obj = new ClassName();

Example:
class Employee
{
    public int id;
    public string name;
}

Employee emp = new Employee();

15. Difference between object and reference variable?

Object:
=> Object is an instance of class.
=> Object is a real world entity.
=> Object is a physical entity.
=> Object is a reference type.

Reference Variable:
=> Reference variable is a variable which will store the address of the object.


=======================================================================================================
1. What is instance?
2. What is instance variable?
3. What is instance method?
4. What is instance constructor?
5. What is instance property?
6. What is instance indexer?
7. What is instance event?
8. What is instance delegate?
9. What is instance finalizer?
10. What is instance nested type?
11. What is instance class?
 

=======================================================================================================
1. What is instance?

=> Instance is an object of class.
=> Instance is a real world entity.
=> Instance is a physical entity.
=> Instance is a reference type.
Example:
Employee emp = new Employee();
# here emp is instance of Employee class.

2. What is instance variable?

=> Instance variable is a variable which will store the state of object.
=> Instance variable is a member of class.
=> Instance variable is a reference type.
=> Instance variable is a user defined data type.

Example:Python
class Employee:
    def __init__(self):
        self.id = 101
        self.name = "Ravi"
        self.salary = 25000

emp = Employee()
print(emp.id)
print(emp.name)
print(emp.salary)

# here id, name, salary are instance variables 
and self is reference variable which will store the address of object.
